version: '3.8'

services:
  # Nginx Proxy para SSL automático
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    networks:
      - elven-network
    restart: unless-stopped

  # Certbot automático via acme-companion
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=${SSL_EMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    networks:
      - elven-network
    restart: unless-stopped

  # Nginx interno para proxy da aplicação
  nginx:
    image: nginx:latest
    container_name: elven-nginx
    expose:
      - "80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - elven-network
    depends_on:
      - elven-api
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}

  elven-api:
    container_name: elven-sre-api
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    networks:
      - elven-network
    depends_on:
      - jaeger
      - collector
      - mysql
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4318/v1/traces
      - OTEL_SERVICE_NAME=elven-api
      - OTEL_RESOURCE_ATTRIBUTES=service.name=elven-api,service.version=1.0.0
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}

  collector:
    image: otel/opentelemetry-collector-contrib:0.102.1
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 13133:13133  # health check 
      - 4318:4318  # OTLP HTTP 
    depends_on:
      - jaeger
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:13133"]
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      - elven-network

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_HTTP_ENABLED=true
      - COLLECTOR_OTLP_GRPC_ENABLED=true
      - COLLECTOR_OTLP_GRPC_HOST_PORT=:4317
      - COLLECTOR_OTLP_HTTP_HOST_PORT=:4318
    ports:
      - "16686:16686"  # UI do Jaeger
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - elven-network

  mysql:
    image: mysql:8.0
    container_name: elven-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - elven-network

volumes:
  mysql_data:
  nginx_certs:
  nginx_vhost:
  nginx_html:
  acme:

networks:
  elven-network:
    driver: bridge 